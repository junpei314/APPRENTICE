Rubyのコーディング規約は，一貫性を保ち，可読性を向上させるために，プログラマが守るべき一連のスタイルガイドです．以下は，一般的なRubyコーディング規約のいくつかのルールです．

1. **インデント**: ソースコードは2スペースでインデントするのが一般的です．タブ文字は使用しないでください．
2. **命名規則**:
    - クラス名とモジュール名は，大文字で始まるキャメルケース（例: **`MyClass`**）を使用します．
    - メソッド名と変数名は，スネークケース（例: **`my_method`**）を使用します．
    - 定数名は，すべて大文字のスネークケース（例: **`MY_CONSTANT`**）を使用します．
3. **改行と空白**:
    - 1つの改行を使用して，メソッドやクラスの定義を区切ります．
    - 空行を使用して，複数のセクションや論理的なブロックを区切ります．
    - 不要な空白や空行は避けます．
4. **カッコの省略**:
    - メソッド呼び出しの引数のカッコは省略できますが，カッコがないと可読性が損なわれる場合や，引数が明確でない場合はカッコを使用してください．
5. **文字列リテラル**:
    - 文字列内で式展開や特殊文字が不要な場合は，シングルクォート（**`'`**）で囲みます．
    - 文字列内で式展開や特殊文字が必要な場合は，ダブルクォート（**`"`**）で囲みます．
6. **コメント**:
    - コードが自己説明的でない場合や，他の開発者に理解を助けるために，適切なコメントを入れます．
    - コメントは**`#`**記号を使って1行コメントを記述し，複数行コメントの場合は**`=`**で始まる**`=end`**で終わるブロックコメントを使用します．

これらは一般的なRubyのコーディング規約の例ですが，プロジェクトや組織によっては独自のスタイルガイドが適用されることがあります．**[RuboCop](https://rubocop.org/)** のような自動コーディング規約チェッカーを使用して，規約に従っていることを確認することができます．